/* auto-generated by fsm_gen.py */

#include "fsm_driver.hpp"
#include "Events.hpp"
#include "fsm_fifo.hpp"
#include "tinyfsm.hpp"
#include "FSM1.hpp"
#include "FSM2.hpp"
#include "FSM3.hpp"

using my_fsm = tinyfsm::FsmList<FSM1, FSM2, FSM3>;

TIMER_3_EVENT TIMER_3_EVENT_SINGLETON = TIMER_3_EVENT();
TIMER_1_EVENT TIMER_1_EVENT_SINGLETON = TIMER_1_EVENT();
TIMER_2_EVENT TIMER_2_EVENT_SINGLETON = TIMER_2_EVENT();

void start_fsm_driver() {
    FSM_Event event;

    my_fsm::start();

    while (1) {
        if (read_event(&event)) {
            switch (event) {
            case TIMER_3_EVENT_INDEX: my_fsm::dispatch(TIMER_3_EVENT_SINGLETON);break;
            case TIMER_1_EVENT_INDEX: my_fsm::dispatch(TIMER_1_EVENT_SINGLETON);break;
            case TIMER_2_EVENT_INDEX: my_fsm::dispatch(TIMER_2_EVENT_SINGLETON);break;
            }
        }
    }
}

